name: Build and Release APK

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      # 3. 设置 Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''

      # 4. 自动接受 SDK 许可证
      - name: Accept licenses
        run: yes | sdkmanager --licenses || true

      # 5. 设置 KVM 权限（如在第一段中）
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          ls /dev/kvm

      # 6. 解码 Keystore 文件
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > /tmp/keystore.jks

      # 7. 为 gradlew 文件授予执行权限
      - name: Grant execution permission for gradlew
        run: chmod +x ./gradlew

      # 8. 构建 Release APK
      - name: Build Release APK
        run: ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=/tmp/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      # 9. 创建 GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      # 10. 上传 Release APK
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
